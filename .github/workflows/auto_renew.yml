# .github/workflows/auto_renew.yml
name: Auto Server Renew

on:
  # 定时运行 - 每天UTC 2点（北京时间10点）
  schedule:
    - cron: '0 2 * * *'
  
  # 手动触发
  workflow_dispatch:
    inputs:
      reason:
        description: '手动运行原因'
        required: false
        default: '手动测试'
        type: string

# 环境变量
env:
  PYTHONUNBUFFERED: 1
  DISPLAY: :99

# 设置权限
permissions:
  contents: read

jobs:
  renew-server:
    name: 续期服务器
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4
        
      - name: 🐍 设置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: 📦 安装系统依赖
        run: |
          # 更新包列表
          sudo apt-get update -qq
          
          # 安装Chrome和相关依赖
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update -qq
          
          sudo apt-get install -y -qq \
            google-chrome-stable \
            xvfb \
            fonts-liberation \
            libasound2 \
            libatk-bridge2.0-0 \
            libdrm2 \
            libxcomposite1 \
            libxdamage1 \
            libxrandr2 \
            libgbm1 \
            libxss1 \
            libnss3
            
      - name: 🔍 检查Chrome版本
        run: |
          CHROME_VERSION=$(google-chrome --version)
          echo "Chrome版本: $CHROME_VERSION"
          
      - name: 📦 安装Python依赖
        run: |
          python -m pip install --upgrade pip
          pip install \
            selenium==4.15.0 \
            undetected-chromedriver \
            playwright==1.40.0 \
            requests \
            loguru
            
      - name: 🎭 安装Playwright浏览器
        run: |
          playwright install chromium
          
      - name: 🖥️ 启动虚拟显示
        run: |
          # 启动Xvfb虚拟显示服务器
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          echo "虚拟显示已启动"
          
      - name: 🚀 运行续期脚本
        env:
          EMAIL: ${{ secrets.LOGIN_EMAIL }}
          PASSWORD: ${{ secrets.LOGIN_PASSWORD }}
          LOGIN_URL: ${{ secrets.LOGIN_URL }}
          RENEW_URL: ${{ secrets.RENEW_URL }}
        run: |
          echo "🚀 开始执行续期任务..."
          python main.py
          
      - name: 📊 显示运行状态
        if: always()
        run: |
          echo "================================="
          echo "📋 任务执行完成"
          echo "⏰ 完成时间: $(date)"
          echo "📁 工作目录: $(pwd)"
          echo "📂 文件列表:"
          ls -la
          echo "================================="
          
          # 显示日志文件（如果存在）
          if [ -f "renew.log" ]; then
            echo "📄 执行日志:"
            cat renew.log
          fi
          
      - name: 📸 上传截图和日志
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: 执行结果-${{ github.run_number }}
          path: |
            /tmp/*.png
            renew.log
            *.log
          retention-days: 7
          if-no-files-found: ignore
          
      - name: 📬 发送通知 (可选)
        if: always()
        run: |
          # 这里可以添加通知逻辑
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ 续期任务执行成功！"
            # 可以在这里添加成功通知，比如：
            # curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            #   -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
            #   -d "text=✅ 服务器续期成功 - $(date)"
          else
            echo "❌ 续期任务执行失败！"
            # 可以在这里添加失败通知
          fi
          
      - name: 🧹 清理临时文件
        if: always()
        run: |
          # 清理可能的临时文件
          sudo rm -rf /tmp/chrome* /tmp/.X* 2>/dev/null || true
          echo "临时文件清理完成"
